Intuition
The intuition behind solving the "Next Greater Element" problem using stacks and maps involves leveraging the properties of these data structures to efficiently find the next greater element for each number in nums1 based on the order in nums2.

Understanding the Problem:

You need to find the next greater element for each element in nums1 by referring to the array nums2.
The next greater element for an element x in an array is the first element to the right of x in the array that is greater than x.



Approach
Initialize Data Structures:

Create an empty stack to help with finding the next greater elements.
Create a map to store the next greater element for each element in nums2.

Iterating Through nums2:

The algorithm iterates through each element in nums2 and uses a stack to keep track of elements for which the next greater element has not yet been found.
For each element in nums2, the algorithm checks if this element is greater than the elements currently on the stack. If it is, the algorithm pops elements from the stack and updates the map to indicate that this element is the next greater element for the popped elements.

Using the Stack:

If the current element is greater than the element on top of the stack, it means the current element is the next greater element for the top element of the stack.
The algorithm then pops the top element from the stack and updates the map to store this relationship.
This process continues until the stack is empty or the top element of the stack is greater than the current element.

Pushing to Stack:

Regardless of whether the current element is greater or not, the algorithm pushes the current element onto the stack to continue the process for subsequent elements in nums2.

Filling the Result Array:

For each element in nums1, the algorithm looks up the next greater element in the map.
If the element is not found in the map (i.e., it does not have a next greater element), the default value -1 is used.


///////////////////CODE///////////////////////
import java.util.HashMap;
import java.util.Map;
import java.util.Stack;
class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        Map<Integer, Integer>map = new HashMap<>();
        Stack<Integer>stack = new Stack<>();
        for(int num:nums2){
            while(!stack.isEmpty() && stack.peek()<num){
                map.put(stack.pop(),num);
            }
            stack.push(num);
        }
        int []result = new int[nums1.length];
        for(int i = 0; i < nums1.length; i++){
            result[i] = map.getOrDefault(nums1[i], -1);
        }
        return result;
    }
}

